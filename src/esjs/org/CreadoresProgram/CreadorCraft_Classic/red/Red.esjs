const globales = require("esjs/globales.esjs");
const ProcesadorDePaquetes = require("./ProcesadorDePaquetes.esjs");
clase Red{
    constructor(){
        ambiente.ws = crear WebSocket(globales.urlWebsocket);
        ambiente.procesadorDePaquetes = crear ProcesadorDePaquetes();
        ambiente.ws.onmessage = funcion(evento){
            mut paquete = JSON.analizar(evento.data);
            ambiente.procesadorDePaquetes.procesarPaquete(paquete);
        }.bind(ambiente);
        axios.defaults.withCredentials = verdadero;
    }//ambiente es this
    enviarPaquete(paquete){
        si(paquete.obtenerTipo() == 0){
            ambiente.#enviarPaqueteRest(paquete);
        }sino{
            ambiente.#enviarPaqueteWS(paquete);
        }
    }
    #enviarPaqueteRest(paquete){
        elegir(paquete.obtenerMetodo()){
            caso "GET":
                axios.get(globales.urlRest+paquete.obtenerUrl()).luego(funcion(res){
                    ambiente.procesadorDePaquetes.procesarRespuesta(paquete, res.data);
                }.bind(ambiente)).capturar(funcion(error){
                    ambiente.procesadorDePaquetes.procesarRespuesta(paquete, nulo, error);
                }.bind(ambiente));
                romper;
            caso "POST":
                axios.post(globales.urlRest+paquete.obtenerUrl(), paquete.aJson()).luego(funcion(res){
                    ambiente.procesadorDePaquetes.procesarRespuesta(paquete, res.data);
                }.bind(ambiente)).capturar(funcion(error){
                    ambiente.procesadorDePaquetes.procesarRespuesta(paquete, nulo, error);
                }.bind(ambiente));
            caso "PUT":
                axios.put(globales.urlRest+paquete.obtenerUrl(), paquete.aJson()).luego(funcion(res){
                    ambiente.procesadorDePaquetes.procesarRespuesta(paquete, res.data);
                }.bind(ambiente)).capturar(funcion(error){
                    ambiente.procesadorDePaquetes.procesarRespuesta(paquete, nulo, error);
                }.bind(ambiente));
                romper;
            caso "DELETE":
                axios.delete(globales.urlRest+paquete.obtenerUrl(), paquete.aJson()).luego(funcion(res){
                    ambiente.procesadorDePaquetes.procesarRespuesta(paquete, res.data);
                }.bind(ambiente)).capturar(funcion(error){
                    ambiente.procesadorDePaquetes.procesarRespuesta(paquete, nulo, error);
                }.bind(ambiente));
                romper;
        }
    }
    #enviarPaqueteWS(paquete){
        ambiente.ws.send(JSON.aTexto(paquete.aJson()));
    }
    asincrono parar(){
        si(ambiente.ws){
            ambiente.ws.close();
        }
        esperar axios.post(globales.urlRest+"logout", {});
    }
}
module.exports = Red;